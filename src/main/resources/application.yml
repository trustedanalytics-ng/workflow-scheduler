spring:
  profiles: local

server.port: 8080

security:
  ignored: /rest/**,/test/**,/*.js,/sdoc.jsp,/api-docs,/api-docs/default/*,/images/*,/lib/*,/css/*,/v2/api-docs

logging:
  level:
    org.springframework.security: DEBUG
    org.trustedanalytics: DEBUG


endpoints.enabled: false
endpoints.health.enabled: true

sqoop.metastore: jdbc:hsqldb:hsql://localhost:16000/sqoop

oozie.schedule.frequency.minimum: 300

cloudera:
 user: ${cloudera.user:}
 password: ${cloudera.password:}
 url: ${cloudera.address:}
 store: ${cloudera.truststore:}
 storePassword: ${cloudera.truststore.password:}

---

spring:
  profiles: cloud

security:
  ignored: /test/**,/*.js,/sdoc.jsp,/api-docs,/api-docs/default/*,/images/*,/lib/*,/css/*,/v2/api-docs

spring.oauth2.resource:
  id: cloud_controller
  jwt:
    keyUri: ${vcap.services.sso.credentials.tokenKey}

logging:
  level:
    org.springframework.security: DEBUG
    org.trustedanalytics: DEBUG

flyway.initOnMigrate: true

endpoints.enabled: false
endpoints.health.enabled: true
spring.datasource.platform: cloud
spring.jpa.database: POSTGRESQL
spring.datasource: platform=postgres
spring.jpa.show-sql: true
spring.jpa.hibernate.ddl-auto: ""
spring.database.driverClassName: org.postgresql.Driver
spring.datasource.url: jdbc:postgresql://${postgres.hostname}:${postgres.port}/${postgres.dbname}
spring.datasource.username: ${postgres.username}
spring.datasource.password: ${postgres.password}

oozie.schedule.frequency.minimum: 300
yarn:
  cloudera:
    user: ${cloudera.user:}
    password: ${cloudera.password:}
    store: ${cloudera.truststore:}
    storePassword: ${cloudera.truststore.password:}
